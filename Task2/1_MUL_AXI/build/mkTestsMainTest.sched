=== Generated schedule for mkTestsMainTest ===

Method schedule
---------------
Method: go
Ready signal: ((testFSM_abort.whas && testFSM_abort.wget) ||
	       (testFSM_state_mkFSMstate.read == 3'd0) ||
	       (testFSM_state_mkFSMstate.read == 3'd4)) &&
	      ((! testFSM_start_reg_1) || testFSM_state_fired) &&
	      (! testFSM_start_reg)
Sequenced after: done
Conflicts: go
 
Method: done
Ready signal: True
Conflict-free: done
Sequenced before: go
 
Rule schedule
-------------
Rule: dut_writeHandler_isRst_isResetAssertedUpdate
Predicate: dut_writeHandler_isRst_isInReset
Blocking rules: (none)
 
Rule: dut_writeHandler_mergeAddrData
Predicate: dut_writeHandler_addrIn_rv.port1__read[35] &&
	   dut_writeHandler_dataIn_rv.port1__read[72] &&
	   dut_writeHandler_in.i_notFull
Blocking rules: (none)
 
Rule: dut_writeHandler_addrInWrite
Predicate: (! dut_writeHandler_addrIn_rv.port0__read[35]) &&
	   (! dut_writeHandler_isRst_isInReset) &&
	   dut_writeHandler_awvalidIn.wget
Blocking rules: (none)
 
Rule: dut_writeHandler_dataInWrite
Predicate: (! dut_writeHandler_dataIn_rv.port0__read[72]) &&
	   (! dut_writeHandler_isRst_isInReset) &&
	   dut_writeHandler_wvalidIn.wget
Blocking rules: (none)
 
Rule: dut_writeHandler_outWrite
Predicate: dut_writeHandler_out.i_notEmpty &&
	   (! dut_writeHandler_isRst_isInReset) &&
	   dut_writeHandler_breadyIn.wget &&
	   dut_writeHandler_out.notEmpty
Blocking rules: (none)
 
Rule: dut_writeHandler_outForward
Predicate: dut_writeHandler_out.i_notEmpty
Blocking rules: (none)
 
Rule: dut_readHandler_isRst_isResetAssertedUpdate
Predicate: dut_readHandler_isRst_isInReset
Blocking rules: (none)
 
Rule: dut_readHandler_addrInWrite
Predicate: dut_readHandler_in.i_notFull &&
	   (! dut_readHandler_isRst_isInReset) &&
	   dut_readHandler_arvalidIn.wget &&
	   dut_readHandler_in.notFull
Blocking rules: (none)
 
Rule: dut_readHandler_deqOut
Predicate: dut_readHandler_out.i_notEmpty &&
	   (! dut_readHandler_isRst_isInReset) &&
	   dut_readHandler_rreadyIn.wget &&
	   dut_readHandler_out.notEmpty
Blocking rules: (none)
 
Rule: dut_readHandler_putOutData
Predicate: dut_readHandler_out.i_notEmpty
Blocking rules: (none)
 
Rule: dut_read_AXI
Predicate: dut_readHandler_in.i_notEmpty && dut_readHandler_out.i_notFull
Blocking rules: (none)
 
Rule: dut_write_AXI
Predicate: dut_writeHandler_in.i_notEmpty && dut_writeHandler_out.i_notFull
Blocking rules: (none)
 
Rule: dut_product_operation
Predicate: True
Blocking rules: (none)
 
Rule: rd_isRst_isResetAssertedUpdate
Predicate: rd_isRst_isInReset
Blocking rules: (none)
 
Rule: rd_deqIn
Predicate: rd_in.i_notEmpty &&
	   (! rd_isRst_isInReset) && rd_arreadyIn.wget && rd_in.notEmpty
Blocking rules: (none)
 
Rule: rd_forwardIn
Predicate: rd_in.i_notEmpty
Blocking rules: (none)
 
Rule: rd_enqOut
Predicate: rd_out.i_notFull &&
	   (! rd_isRst_isInReset) && rd_rvalidIn.wget && rd_out.notFull
Blocking rules: (none)
 
Rule: wr_isRst_isResetAssertedUpdate
Predicate: wr_isRst_isInReset
Blocking rules: (none)
 
Rule: wr_splitAddrData
Predicate: wr_in.i_notEmpty &&
	   (! wr_addrOut_rv.port0__read[35]) &&
	   (! wr_dataOut_rv.port0__read[72])
Blocking rules: (none)
 
Rule: wr_deqAddr
Predicate: wr_addrOut_rv.port1__read[35] &&
	   (! wr_isRst_isInReset) && wr_awreadyIn.wget
Blocking rules: (none)
 
Rule: wr_forwardAddr
Predicate: wr_addrOut_rv.port1__read[35]
Blocking rules: (none)
 
Rule: wr_deqData
Predicate: wr_dataOut_rv.port1__read[72] &&
	   (! wr_isRst_isInReset) && wr_wreadyIn.wget
Blocking rules: (none)
 
Rule: wr_forwardData
Predicate: wr_dataOut_rv.port1__read[72]
Blocking rules: (none)
 
Rule: wr_forwardResp
Predicate: wr_out.i_notFull &&
	   (! wr_isRst_isInReset) && wr_bvalidIn.wget && wr_out.notFull
Blocking rules: (none)
 
Rule: forward1
Predicate: True
Blocking rules: (none)
 
Rule: forward2
Predicate: True
Blocking rules: (none)
 
Rule: forward3
Predicate: True
Blocking rules: (none)
 
Rule: forward4
Predicate: True
Blocking rules: (none)
 
Rule: forward5
Predicate: True
Blocking rules: (none)
 
Rule: forward6
Predicate: True
Blocking rules: (none)
 
Rule: forward7
Predicate: True
Blocking rules: (none)
 
Rule: forward8
Predicate: True
Blocking rules: (none)
 
Rule: forward1_1
Predicate: True
Blocking rules: (none)
 
Rule: forward2_1
Predicate: True
Blocking rules: (none)
 
Rule: forward3_1
Predicate: True
Blocking rules: (none)
 
Rule: forward4_1
Predicate: True
Blocking rules: (none)
 
Rule: forward5_1
Predicate: True
Blocking rules: (none)
 
Rule: forward6_1
Predicate: True
Blocking rules: (none)
 
Rule: forward7_1
Predicate: True
Blocking rules: (none)
 
Rule: forward8_1
Predicate: True
Blocking rules: (none)
 
Rule: forward9
Predicate: True
Blocking rules: (none)
 
Rule: forward10
Predicate: True
Blocking rules: (none)
 
Rule: forward11
Predicate: True
Blocking rules: (none)
 
Rule: testFSM_start_reg__dreg_update
Predicate: True
Blocking rules: (none)
 
Rule: testFSM_state_handle_abort
Predicate: testFSM_abort.whas && testFSM_abort.wget &&
	   ((! testFSM_start_wire.whas) || (! testFSM_start_wire.wget))
Blocking rules: (none)
 
Rule: testFSM_state_fired__dreg_update
Predicate: True
Blocking rules: (none)
 
Rule: testFSM_state_every
Predicate: True
Blocking rules: (none)
 
Rule: testFSM_restart
Predicate: testFSM_start_reg_1 && (! testFSM_state_fired) &&
	   ((! testFSM_abort.whas) || (! testFSM_abort.wget))
Blocking rules: (none)
 
Rule: testFSM_action_l21c13
Predicate: wr_in.i_notFull &&
	   testFSM_start_wire.whas && testFSM_start_wire.wget &&
	   ((testFSM_abort.whas && testFSM_abort.wget) ||
	    (testFSM_state_mkFSMstate.read == 3'd0) ||
	    (testFSM_state_mkFSMstate.read == 3'd4))
Blocking rules: (none)
 
Rule: testFSM_action_l24c13
Predicate: wr_out.i_notEmpty &&
	   ((! (wr_out.first == 2'd0)) || wr_in.i_notFull) &&
	   ((! testFSM_abort.whas) || (! testFSM_abort.wget)) &&
	   (testFSM_state_mkFSMstate.read == 3'd1)
Blocking rules: (none)
 
Rule: testFSM_action_l30c13
Predicate: wr_out.i_notEmpty &&
	   ((! (wr_out.first == 2'd0)) || rd_in.i_notFull) &&
	   ((! testFSM_abort.whas) || (! testFSM_abort.wget)) &&
	   (testFSM_state_mkFSMstate.read == 3'd2)
Blocking rules: (none)
 
Rule: testFSM_action_l36c13
Predicate: rd_out.i_notEmpty &&
	   ((! testFSM_abort.whas) || (! testFSM_abort.wget)) &&
	   (testFSM_state_mkFSMstate.read == 3'd3)
Blocking rules: (none)
 
Rule: testFSM_idle_l20c11
Predicate: ((! testFSM_start_wire.whas) || (! testFSM_start_wire.wget)) &&
	   ((! testFSM_abort.whas) || (! testFSM_abort.wget)) &&
	   (testFSM_state_mkFSMstate.read == 3'd4)
Blocking rules: (none)
 
Rule: testFSM_fsm_start
Predicate: ((testFSM_abort.whas && testFSM_abort.wget) ||
	    (testFSM_state_mkFSMstate.read == 3'd0) ||
	    (testFSM_state_mkFSMstate.read == 3'd4)) &&
	   ((! testFSM_start_reg_1) || testFSM_state_fired) &&
	   testFSM_start_reg
Blocking rules: (none)
 
Rule: __me_check_48
Predicate: True
Blocking rules: (none)
 
Rule: __me_check_49
Predicate: True
Blocking rules: (none)
 
Rule: __me_check_50
Predicate: True
Blocking rules: (none)
 
Logical execution order: done,
			 go,
			 forward1,
			 forward2,
			 forward5,
			 forward6,
			 forward1_1,
			 forward5_1,
			 forward9,
			 forward10,
			 dut_writeHandler_outForward,
			 forward11,
			 dut_writeHandler_outWrite,
			 dut_writeHandler_isRst_isResetAssertedUpdate,
			 dut_readHandler_putOutData,
			 forward7,
			 forward8,
			 dut_readHandler_deqOut,
			 dut_readHandler_isRst_isResetAssertedUpdate,
			 rd_forwardIn,
			 forward3,
			 forward4,
			 dut_readHandler_addrInWrite,
			 dut_read_AXI,
			 dut_product_operation,
			 dut_write_AXI,
			 rd_deqIn,
			 rd_enqOut,
			 rd_isRst_isResetAssertedUpdate,
			 wr_splitAddrData,
			 forward2_1,
			 forward6_1,
			 wr_forwardAddr,
			 forward3_1,
			 forward4_1,
			 dut_writeHandler_addrInWrite,
			 wr_deqAddr,
			 wr_forwardData,
			 forward7_1,
			 forward8_1,
			 dut_writeHandler_dataInWrite,
			 dut_writeHandler_mergeAddrData,
			 wr_deqData,
			 wr_forwardResp,
			 wr_isRst_isResetAssertedUpdate,
			 testFSM_restart,
			 testFSM_action_l24c13,
			 testFSM_action_l30c13,
			 testFSM_action_l36c13,
			 __me_check_49,
			 __me_check_50,
			 testFSM_fsm_start,
			 testFSM_action_l21c13,
			 __me_check_48,
			 testFSM_idle_l20c11,
			 testFSM_start_reg__dreg_update,
			 testFSM_state_handle_abort,
			 testFSM_state_every,
			 testFSM_state_fired__dreg_update

===============================================
